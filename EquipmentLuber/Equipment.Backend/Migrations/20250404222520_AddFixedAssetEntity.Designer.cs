// <auto-generated />
using Equipment.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Equipment.Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250404222520_AddFixedAssetEntity")]
    partial class AddFixedAssetEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeFixedAsset", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("FixedAssetsId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "FixedAssetsId");

                    b.HasIndex("FixedAssetsId");

                    b.ToTable("EmployeeFixedAsset");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.BranchOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BranchOffices");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BranchOfficeId", "Name")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeNumber")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("EmploymentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentId", "Name")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Employment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId", "Name")
                        .IsUnique();

                    b.ToTable("Employments");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.FixedAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmploymentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentId", "Name")
                        .IsUnique();

                    b.ToTable("FixedAssets");
                });

            modelBuilder.Entity("EmployeeFixedAsset", b =>
                {
                    b.HasOne("Equipment.Shared.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Equipment.Shared.Entities.FixedAsset", null)
                        .WithMany()
                        .HasForeignKey("FixedAssetsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Department", b =>
                {
                    b.HasOne("Equipment.Shared.Entities.BranchOffice", "BranchOffice")
                        .WithMany("Departments")
                        .HasForeignKey("BranchOfficeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BranchOffice");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Employee", b =>
                {
                    b.HasOne("Equipment.Shared.Entities.Employment", "Employment")
                        .WithMany("Employees")
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employment");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Employment", b =>
                {
                    b.HasOne("Equipment.Shared.Entities.Department", "Department")
                        .WithMany("Employments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.FixedAsset", b =>
                {
                    b.HasOne("Equipment.Shared.Entities.Employment", "Employment")
                        .WithMany("FixedAssets")
                        .HasForeignKey("EmploymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employment");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.BranchOffice", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Department", b =>
                {
                    b.Navigation("Employments");
                });

            modelBuilder.Entity("Equipment.Shared.Entities.Employment", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("FixedAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
